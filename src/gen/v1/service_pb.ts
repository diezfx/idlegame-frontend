// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file v1/service.proto (package v1, edition 2023)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Duration, EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Inventory, Item, Job, JobSchema, Monster, MonsterSchema, RouteManifest, TransportJob, TransportJobSchema } from "./domain_pb";
import { file_v1_domain } from "./domain_pb";
import type { BattleJobDefinition, ItemDefinition, MonsterDefinition, ProductionJobDefinition } from "./masterdata_pb";
import { file_v1_masterdata } from "./masterdata_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/service.proto.
 */
export const file_v1_service: GenFile = /*@__PURE__*/
  fileDesc("ChB2MS9zZXJ2aWNlLnByb3RvEgJ2MSJYChRHZXRJbnZlbnRvcnlSZXNwb25zZRIhCgZjaXRpZXMYASADKAsyES52MS5DaXR5SW52ZW50b3J5Eh0KC3RvdGFsX2l0ZW1zGAIgAygLMggudjEuSXRlbSI9Cg1DaXR5SW52ZW50b3J5EgoKAmlkGAEgASgJEiAKCWludmVudG9yeRgCIAEoCzINLnYxLkludmVudG9yeSIfChFHZXRNb25zdGVyUmVxdWVzdBIKCgJpZBgBIAEoAyIkChZHZXRVc2VyUHJvZ3Jlc3NSZXF1ZXN0EgoKAmlkGAEgASgDIjUKF0dldFVzZXJQcm9ncmVzc1Jlc3BvbnNlEhoKEnR1dG9yaWFsX2NvbXBsZXRlZBgBIAEoCCI9ChRDaG9vc2VTdGFydGVyUmVxdWVzdBIKCgJpZBgBIAEoAxIZChFtb25fZGVmaW5pdGlvbl9pZBgCIAEoAyIjChVDaG9vc2VTdGFydGVyUmVzcG9uc2USCgoCaWQYASABKAMiNQoUTGlzdE1vbnN0ZXJzUmVzcG9uc2USHQoIbW9uc3RlcnMYASADKAsyCy52MS5Nb25zdGVyIhsKDUdldEpvYlJlcXVlc3QSCgoCaWQYASABKAMiKQoQTGlzdEpvYnNSZXNwb25zZRIVCgRqb2JzGAEgAygLMgcudjEuSm9iIh4KEERlbGV0ZUpvYlJlcXVlc3QSCgoCaWQYASABKAMiaAoSU3RhcnRCYXR0bGVSZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAMSEgoKbW9uc3Rlcl9pZBgCIAEoAxIZChFqb2JfZGVmaW5pdGlvbl9pZBgDIAEoCRISCgppdGVyYXRpb25zGAQgASgDIiIKEEVudGl0eUlkUmVzcG9uc2USDgoGam9iX2lkGAEgASgDIm8KGVN0YXJ0UHJvZHVjdGlvbkpvYlJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoAxISCgptb25zdGVyX2lkGAIgASgDEhkKEWpvYl9kZWZpbml0aW9uX2lkGAMgASgJEhIKCml0ZXJhdGlvbnMYBCABKAMiJgoTR2V0SW52ZW50b3J5UmVxdWVzdBIPCgd1c2VyX2lkGAEgASgDIiQKCUVxdWlwbWVudBIXCgVpdGVtcxgBIAMoCzIILnYxLkl0ZW0iKQoTR2V0RXF1aXBtZW50UmVxdWVzdBISCgptb25zdGVyX2lkGAEgASgDIloKEEVxdWlwSXRlbVJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoAxISCgptb25zdGVyX2lkGAIgASgDEg8KB2l0ZW1faWQYAyABKAkSEAoIcXVhbnRpdHkYBCABKAMiSgoSVW5FcXVpcEl0ZW1SZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAMSEgoKbW9uc3Rlcl9pZBgCIAEoAxIPCgdpdGVtX2lkGAMgASgJImsKGUNyZWF0ZVRyYW5zcG9ydEpvYlJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoAxISCgptb25zdGVyX2lkGAIgASgDEikKDnJvdXRlX21hbmlmZXN0GAMgASgLMhEudjEuUm91dGVNYW5pZmVzdCIoChZHZXRUcmFuc3BvcnRKb2JSZXF1ZXN0Eg4KBmpvYl9pZBgBIAEoAyJCChhMaXN0VHJhbnNwb3J0Sm9ic1JlcXVlc3QSDwoHdXNlcl9pZBgBIAEoAxIVCg1zdGF0dXNfZmlsdGVyGAIgASgJIkUKGUxpc3RUcmFuc3BvcnRKb2JzUmVzcG9uc2USKAoOdHJhbnNwb3J0X2pvYnMYASADKAsyEC52MS5UcmFuc3BvcnRKb2IiKwoZQ2FuY2VsVHJhbnNwb3J0Sm9iUmVxdWVzdBIOCgZqb2JfaWQYASABKAMiXAoZR2V0QXZhaWxhYmxlUm91dGVzUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgDEhoKEnNvdXJjZV9sb2NhdGlvbl9pZBgCIAEoCRISCgptb25zdGVyX2lkGAMgASgDIkUKGkdldEF2YWlsYWJsZVJvdXRlc1Jlc3BvbnNlEicKEGF2YWlsYWJsZV9yb3V0ZXMYASADKAsyDS52MS5Sb3V0ZUluZm8iVAoJUm91dGVJbmZvEhAKCGRpc3RhbmNlGAIgASgCEjUKEmVzdGltYXRlZF9kdXJhdGlvbhgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbiI1ChBHZXRJdGVtc1Jlc3BvbnNlEiEKBWl0ZW1zGAEgAygLMhIudjEuSXRlbURlZmluaXRpb24iPgoTR2V0TW9uc3RlcnNSZXNwb25zZRInCghtb25zdGVycxgBIAMoCzIVLnYxLk1vbnN0ZXJEZWZpbml0aW9uIkYKGUdldFByb2R1Y3Rpb25Kb2JzUmVzcG9uc2USKQoEam9icxgBIAMoCzIbLnYxLlByb2R1Y3Rpb25Kb2JEZWZpbml0aW9uIj4KFUdldEJhdHRsZUpvYnNSZXNwb25zZRIlCgRqb2JzGAEgAygLMhcudjEuQmF0dGxlSm9iRGVmaW5pdGlvbjKEAQoOTW9uc3RlclNlcnZpY2USMAoKR2V0TW9uc3RlchIVLnYxLkdldE1vbnN0ZXJSZXF1ZXN0GgsudjEuTW9uc3RlchJACgxMaXN0TW9uc3RlcnMSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaGC52MS5MaXN0TW9uc3RlcnNSZXNwb25zZTKvAgoKSm9iU2VydmljZRIkCgZHZXRKb2ISES52MS5HZXRKb2JSZXF1ZXN0GgcudjEuSm9iEjgKCExpc3RKb2JzEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhQudjEuTGlzdEpvYnNSZXNwb25zZRI5CglEZWxldGVKb2ISFC52MS5EZWxldGVKb2JSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EjsKC1N0YXJ0QmF0dGxlEhYudjEuU3RhcnRCYXR0bGVSZXF1ZXN0GhQudjEuRW50aXR5SWRSZXNwb25zZRJJChJTdGFydFByb2R1Y3Rpb25Kb2ISHS52MS5TdGFydFByb2R1Y3Rpb25Kb2JSZXF1ZXN0GhQudjEuRW50aXR5SWRSZXNwb25zZTKRAwoQVHJhbnNwb3J0U2VydmljZRJIChFTdGFydFRyYW5zcG9ydEpvYhIdLnYxLkNyZWF0ZVRyYW5zcG9ydEpvYlJlcXVlc3QaFC52MS5FbnRpdHlJZFJlc3BvbnNlEj8KD0dldFRyYW5zcG9ydEpvYhIaLnYxLkdldFRyYW5zcG9ydEpvYlJlcXVlc3QaEC52MS5UcmFuc3BvcnRKb2ISUAoRTGlzdFRyYW5zcG9ydEpvYnMSHC52MS5MaXN0VHJhbnNwb3J0Sm9ic1JlcXVlc3QaHS52MS5MaXN0VHJhbnNwb3J0Sm9ic1Jlc3BvbnNlEksKEkNhbmNlbFRyYW5zcG9ydEpvYhIdLnYxLkNhbmNlbFRyYW5zcG9ydEpvYlJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSUwoSR2V0QXZhaWxhYmxlUm91dGVzEh0udjEuR2V0QXZhaWxhYmxlUm91dGVzUmVxdWVzdBoeLnYxLkdldEF2YWlsYWJsZVJvdXRlc1Jlc3BvbnNlMocCChBJbnZlbnRvcnlTZXJ2aWNlEkEKDEdldEludmVudG9yeRIXLnYxLkdldEludmVudG9yeVJlcXVlc3QaGC52MS5HZXRJbnZlbnRvcnlSZXNwb25zZRI2CgxHZXRFcXVpcG1lbnQSFy52MS5HZXRFcXVpcG1lbnRSZXF1ZXN0Gg0udjEuRXF1aXBtZW50EjkKCUVxdWlwSXRlbRIULnYxLkVxdWlwSXRlbVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSPQoLVW5FcXVpcEl0ZW0SFi52MS5VbkVxdWlwSXRlbVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkyWQoLVXNlclNlcnZpY2USSgoPR2V0VXNlclByb2dyZXNzEhoudjEuR2V0VXNlclByb2dyZXNzUmVxdWVzdBobLnYxLkdldFVzZXJQcm9ncmVzc1Jlc3BvbnNlMlcKD1R1dG9yaWFsU2VydmljZRJECg1DaG9vc2VTdGFydGVyEhgudjEuQ2hvb3NlU3RhcnRlclJlcXVlc3QaGS52MS5DaG9vc2VTdGFydGVyUmVzcG9uc2UynQIKEU1hc3RlcmRhdGFTZXJ2aWNlEjgKCEdldEl0ZW1zEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhQudjEuR2V0SXRlbXNSZXNwb25zZRI+CgtHZXRNb25zdGVycxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoXLnYxLkdldE1vbnN0ZXJzUmVzcG9uc2USSgoRR2V0UHJvZHVjdGlvbkpvYnMSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaHS52MS5HZXRQcm9kdWN0aW9uSm9ic1Jlc3BvbnNlEkIKDUdldEJhdHRsZUpvYnMSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaGS52MS5HZXRCYXR0bGVKb2JzUmVzcG9uc2VCK1opZ2l0aHViLmNvbS9kaWV6ZngvaWRsZWdhbWUtYmFja2VuZC9nZW4vdjFiCGVkaXRpb25zcOgH", [file_google_protobuf_duration, file_google_protobuf_empty, file_v1_domain, file_v1_masterdata]);

/**
 * @generated from message v1.GetInventoryResponse
 */
export type GetInventoryResponse = Message<"v1.GetInventoryResponse"> & {
  /**
   * @generated from field: repeated v1.CityInventory cities = 1;
   */
  cities: CityInventory[];

  /**
   * @generated from field: repeated v1.Item total_items = 2;
   */
  totalItems: Item[];
};

/**
 * Describes the message v1.GetInventoryResponse.
 * Use `create(GetInventoryResponseSchema)` to create a new message.
 */
export const GetInventoryResponseSchema: GenMessage<GetInventoryResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 0);

/**
 * @generated from message v1.CityInventory
 */
export type CityInventory = Message<"v1.CityInventory"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: v1.Inventory inventory = 2;
   */
  inventory?: Inventory;
};

/**
 * Describes the message v1.CityInventory.
 * Use `create(CityInventorySchema)` to create a new message.
 */
export const CityInventorySchema: GenMessage<CityInventory> = /*@__PURE__*/
  messageDesc(file_v1_service, 1);

/**
 * @generated from message v1.GetMonsterRequest
 */
export type GetMonsterRequest = Message<"v1.GetMonsterRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message v1.GetMonsterRequest.
 * Use `create(GetMonsterRequestSchema)` to create a new message.
 */
export const GetMonsterRequestSchema: GenMessage<GetMonsterRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 2);

/**
 * @generated from message v1.GetUserProgressRequest
 */
export type GetUserProgressRequest = Message<"v1.GetUserProgressRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message v1.GetUserProgressRequest.
 * Use `create(GetUserProgressRequestSchema)` to create a new message.
 */
export const GetUserProgressRequestSchema: GenMessage<GetUserProgressRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 3);

/**
 * @generated from message v1.GetUserProgressResponse
 */
export type GetUserProgressResponse = Message<"v1.GetUserProgressResponse"> & {
  /**
   * @generated from field: bool tutorial_completed = 1;
   */
  tutorialCompleted: boolean;
};

/**
 * Describes the message v1.GetUserProgressResponse.
 * Use `create(GetUserProgressResponseSchema)` to create a new message.
 */
export const GetUserProgressResponseSchema: GenMessage<GetUserProgressResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 4);

/**
 * @generated from message v1.ChooseStarterRequest
 */
export type ChooseStarterRequest = Message<"v1.ChooseStarterRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: int64 mon_definition_id = 2;
   */
  monDefinitionId: bigint;
};

/**
 * Describes the message v1.ChooseStarterRequest.
 * Use `create(ChooseStarterRequestSchema)` to create a new message.
 */
export const ChooseStarterRequestSchema: GenMessage<ChooseStarterRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 5);

/**
 * @generated from message v1.ChooseStarterResponse
 */
export type ChooseStarterResponse = Message<"v1.ChooseStarterResponse"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message v1.ChooseStarterResponse.
 * Use `create(ChooseStarterResponseSchema)` to create a new message.
 */
export const ChooseStarterResponseSchema: GenMessage<ChooseStarterResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 6);

/**
 * @generated from message v1.ListMonstersResponse
 */
export type ListMonstersResponse = Message<"v1.ListMonstersResponse"> & {
  /**
   * @generated from field: repeated v1.Monster monsters = 1;
   */
  monsters: Monster[];
};

/**
 * Describes the message v1.ListMonstersResponse.
 * Use `create(ListMonstersResponseSchema)` to create a new message.
 */
export const ListMonstersResponseSchema: GenMessage<ListMonstersResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 7);

/**
 * @generated from message v1.GetJobRequest
 */
export type GetJobRequest = Message<"v1.GetJobRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message v1.GetJobRequest.
 * Use `create(GetJobRequestSchema)` to create a new message.
 */
export const GetJobRequestSchema: GenMessage<GetJobRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 8);

/**
 * @generated from message v1.ListJobsResponse
 */
export type ListJobsResponse = Message<"v1.ListJobsResponse"> & {
  /**
   * @generated from field: repeated v1.Job jobs = 1;
   */
  jobs: Job[];
};

/**
 * Describes the message v1.ListJobsResponse.
 * Use `create(ListJobsResponseSchema)` to create a new message.
 */
export const ListJobsResponseSchema: GenMessage<ListJobsResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 9);

/**
 * @generated from message v1.DeleteJobRequest
 */
export type DeleteJobRequest = Message<"v1.DeleteJobRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message v1.DeleteJobRequest.
 * Use `create(DeleteJobRequestSchema)` to create a new message.
 */
export const DeleteJobRequestSchema: GenMessage<DeleteJobRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 10);

/**
 * @generated from message v1.StartBattleRequest
 */
export type StartBattleRequest = Message<"v1.StartBattleRequest"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * @generated from field: int64 monster_id = 2;
   */
  monsterId: bigint;

  /**
   * @generated from field: string job_definition_id = 3;
   */
  jobDefinitionId: string;

  /**
   * @generated from field: int64 iterations = 4;
   */
  iterations: bigint;
};

/**
 * Describes the message v1.StartBattleRequest.
 * Use `create(StartBattleRequestSchema)` to create a new message.
 */
export const StartBattleRequestSchema: GenMessage<StartBattleRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 11);

/**
 * @generated from message v1.EntityIdResponse
 */
export type EntityIdResponse = Message<"v1.EntityIdResponse"> & {
  /**
   * @generated from field: int64 job_id = 1;
   */
  jobId: bigint;
};

/**
 * Describes the message v1.EntityIdResponse.
 * Use `create(EntityIdResponseSchema)` to create a new message.
 */
export const EntityIdResponseSchema: GenMessage<EntityIdResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 12);

/**
 * @generated from message v1.StartProductionJobRequest
 */
export type StartProductionJobRequest = Message<"v1.StartProductionJobRequest"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * @generated from field: int64 monster_id = 2;
   */
  monsterId: bigint;

  /**
   * @generated from field: string job_definition_id = 3;
   */
  jobDefinitionId: string;

  /**
   * @generated from field: int64 iterations = 4;
   */
  iterations: bigint;
};

/**
 * Describes the message v1.StartProductionJobRequest.
 * Use `create(StartProductionJobRequestSchema)` to create a new message.
 */
export const StartProductionJobRequestSchema: GenMessage<StartProductionJobRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 13);

/**
 * @generated from message v1.GetInventoryRequest
 */
export type GetInventoryRequest = Message<"v1.GetInventoryRequest"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;
};

/**
 * Describes the message v1.GetInventoryRequest.
 * Use `create(GetInventoryRequestSchema)` to create a new message.
 */
export const GetInventoryRequestSchema: GenMessage<GetInventoryRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 14);

/**
 * @generated from message v1.Equipment
 */
export type Equipment = Message<"v1.Equipment"> & {
  /**
   * @generated from field: repeated v1.Item items = 1;
   */
  items: Item[];
};

/**
 * Describes the message v1.Equipment.
 * Use `create(EquipmentSchema)` to create a new message.
 */
export const EquipmentSchema: GenMessage<Equipment> = /*@__PURE__*/
  messageDesc(file_v1_service, 15);

/**
 * @generated from message v1.GetEquipmentRequest
 */
export type GetEquipmentRequest = Message<"v1.GetEquipmentRequest"> & {
  /**
   * @generated from field: int64 monster_id = 1;
   */
  monsterId: bigint;
};

/**
 * Describes the message v1.GetEquipmentRequest.
 * Use `create(GetEquipmentRequestSchema)` to create a new message.
 */
export const GetEquipmentRequestSchema: GenMessage<GetEquipmentRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 16);

/**
 * @generated from message v1.EquipItemRequest
 */
export type EquipItemRequest = Message<"v1.EquipItemRequest"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * @generated from field: int64 monster_id = 2;
   */
  monsterId: bigint;

  /**
   * @generated from field: string item_id = 3;
   */
  itemId: string;

  /**
   * @generated from field: int64 quantity = 4;
   */
  quantity: bigint;
};

/**
 * Describes the message v1.EquipItemRequest.
 * Use `create(EquipItemRequestSchema)` to create a new message.
 */
export const EquipItemRequestSchema: GenMessage<EquipItemRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 17);

/**
 * @generated from message v1.UnEquipItemRequest
 */
export type UnEquipItemRequest = Message<"v1.UnEquipItemRequest"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * @generated from field: int64 monster_id = 2;
   */
  monsterId: bigint;

  /**
   * @generated from field: string item_id = 3;
   */
  itemId: string;
};

/**
 * Describes the message v1.UnEquipItemRequest.
 * Use `create(UnEquipItemRequestSchema)` to create a new message.
 */
export const UnEquipItemRequestSchema: GenMessage<UnEquipItemRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 18);

/**
 * Transport Service Messages
 *
 * @generated from message v1.CreateTransportJobRequest
 */
export type CreateTransportJobRequest = Message<"v1.CreateTransportJobRequest"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * @generated from field: int64 monster_id = 2;
   */
  monsterId: bigint;

  /**
   * @generated from field: v1.RouteManifest route_manifest = 3;
   */
  routeManifest?: RouteManifest;
};

/**
 * Describes the message v1.CreateTransportJobRequest.
 * Use `create(CreateTransportJobRequestSchema)` to create a new message.
 */
export const CreateTransportJobRequestSchema: GenMessage<CreateTransportJobRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 19);

/**
 * @generated from message v1.GetTransportJobRequest
 */
export type GetTransportJobRequest = Message<"v1.GetTransportJobRequest"> & {
  /**
   * @generated from field: int64 job_id = 1;
   */
  jobId: bigint;
};

/**
 * Describes the message v1.GetTransportJobRequest.
 * Use `create(GetTransportJobRequestSchema)` to create a new message.
 */
export const GetTransportJobRequestSchema: GenMessage<GetTransportJobRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 20);

/**
 * @generated from message v1.ListTransportJobsRequest
 */
export type ListTransportJobsRequest = Message<"v1.ListTransportJobsRequest"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * Optional: filter by transport status
   *
   * @generated from field: string status_filter = 2;
   */
  statusFilter: string;
};

/**
 * Describes the message v1.ListTransportJobsRequest.
 * Use `create(ListTransportJobsRequestSchema)` to create a new message.
 */
export const ListTransportJobsRequestSchema: GenMessage<ListTransportJobsRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 21);

/**
 * @generated from message v1.ListTransportJobsResponse
 */
export type ListTransportJobsResponse = Message<"v1.ListTransportJobsResponse"> & {
  /**
   * @generated from field: repeated v1.TransportJob transport_jobs = 1;
   */
  transportJobs: TransportJob[];
};

/**
 * Describes the message v1.ListTransportJobsResponse.
 * Use `create(ListTransportJobsResponseSchema)` to create a new message.
 */
export const ListTransportJobsResponseSchema: GenMessage<ListTransportJobsResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 22);

/**
 * @generated from message v1.CancelTransportJobRequest
 */
export type CancelTransportJobRequest = Message<"v1.CancelTransportJobRequest"> & {
  /**
   * @generated from field: int64 job_id = 1;
   */
  jobId: bigint;
};

/**
 * Describes the message v1.CancelTransportJobRequest.
 * Use `create(CancelTransportJobRequestSchema)` to create a new message.
 */
export const CancelTransportJobRequestSchema: GenMessage<CancelTransportJobRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 23);

/**
 * @generated from message v1.GetAvailableRoutesRequest
 */
export type GetAvailableRoutesRequest = Message<"v1.GetAvailableRoutesRequest"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * @generated from field: string source_location_id = 2;
   */
  sourceLocationId: string;

  /**
   * @generated from field: int64 monster_id = 3;
   */
  monsterId: bigint;
};

/**
 * Describes the message v1.GetAvailableRoutesRequest.
 * Use `create(GetAvailableRoutesRequestSchema)` to create a new message.
 */
export const GetAvailableRoutesRequestSchema: GenMessage<GetAvailableRoutesRequest> = /*@__PURE__*/
  messageDesc(file_v1_service, 24);

/**
 * @generated from message v1.GetAvailableRoutesResponse
 */
export type GetAvailableRoutesResponse = Message<"v1.GetAvailableRoutesResponse"> & {
  /**
   * @generated from field: repeated v1.RouteInfo available_routes = 1;
   */
  availableRoutes: RouteInfo[];
};

/**
 * Describes the message v1.GetAvailableRoutesResponse.
 * Use `create(GetAvailableRoutesResponseSchema)` to create a new message.
 */
export const GetAvailableRoutesResponseSchema: GenMessage<GetAvailableRoutesResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 25);

/**
 * @generated from message v1.RouteInfo
 */
export type RouteInfo = Message<"v1.RouteInfo"> & {
  /**
   * @generated from field: float distance = 2;
   */
  distance: number;

  /**
   * @generated from field: google.protobuf.Duration estimated_duration = 3;
   */
  estimatedDuration?: Duration;
};

/**
 * Describes the message v1.RouteInfo.
 * Use `create(RouteInfoSchema)` to create a new message.
 */
export const RouteInfoSchema: GenMessage<RouteInfo> = /*@__PURE__*/
  messageDesc(file_v1_service, 26);

/**
 * @generated from message v1.GetItemsResponse
 */
export type GetItemsResponse = Message<"v1.GetItemsResponse"> & {
  /**
   * @generated from field: repeated v1.ItemDefinition items = 1;
   */
  items: ItemDefinition[];
};

/**
 * Describes the message v1.GetItemsResponse.
 * Use `create(GetItemsResponseSchema)` to create a new message.
 */
export const GetItemsResponseSchema: GenMessage<GetItemsResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 27);

/**
 * @generated from message v1.GetMonstersResponse
 */
export type GetMonstersResponse = Message<"v1.GetMonstersResponse"> & {
  /**
   * @generated from field: repeated v1.MonsterDefinition monsters = 1;
   */
  monsters: MonsterDefinition[];
};

/**
 * Describes the message v1.GetMonstersResponse.
 * Use `create(GetMonstersResponseSchema)` to create a new message.
 */
export const GetMonstersResponseSchema: GenMessage<GetMonstersResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 28);

/**
 * @generated from message v1.GetProductionJobsResponse
 */
export type GetProductionJobsResponse = Message<"v1.GetProductionJobsResponse"> & {
  /**
   * @generated from field: repeated v1.ProductionJobDefinition jobs = 1;
   */
  jobs: ProductionJobDefinition[];
};

/**
 * Describes the message v1.GetProductionJobsResponse.
 * Use `create(GetProductionJobsResponseSchema)` to create a new message.
 */
export const GetProductionJobsResponseSchema: GenMessage<GetProductionJobsResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 29);

/**
 * @generated from message v1.GetBattleJobsResponse
 */
export type GetBattleJobsResponse = Message<"v1.GetBattleJobsResponse"> & {
  /**
   * @generated from field: repeated v1.BattleJobDefinition jobs = 1;
   */
  jobs: BattleJobDefinition[];
};

/**
 * Describes the message v1.GetBattleJobsResponse.
 * Use `create(GetBattleJobsResponseSchema)` to create a new message.
 */
export const GetBattleJobsResponseSchema: GenMessage<GetBattleJobsResponse> = /*@__PURE__*/
  messageDesc(file_v1_service, 30);

/**
 * @generated from service v1.MonsterService
 */
export const MonsterService: GenService<{
  /**
   * @generated from rpc v1.MonsterService.GetMonster
   */
  getMonster: {
    methodKind: "unary";
    input: typeof GetMonsterRequestSchema;
    output: typeof MonsterSchema;
  },
  /**
   * @generated from rpc v1.MonsterService.ListMonsters
   */
  listMonsters: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ListMonstersResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_service, 0);

/**
 * @generated from service v1.JobService
 */
export const JobService: GenService<{
  /**
   * @generated from rpc v1.JobService.GetJob
   */
  getJob: {
    methodKind: "unary";
    input: typeof GetJobRequestSchema;
    output: typeof JobSchema;
  },
  /**
   * @generated from rpc v1.JobService.ListJobs
   */
  listJobs: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ListJobsResponseSchema;
  },
  /**
   * @generated from rpc v1.JobService.DeleteJob
   */
  deleteJob: {
    methodKind: "unary";
    input: typeof DeleteJobRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc v1.JobService.StartBattle
   */
  startBattle: {
    methodKind: "unary";
    input: typeof StartBattleRequestSchema;
    output: typeof EntityIdResponseSchema;
  },
  /**
   * @generated from rpc v1.JobService.StartProductionJob
   */
  startProductionJob: {
    methodKind: "unary";
    input: typeof StartProductionJobRequestSchema;
    output: typeof EntityIdResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_service, 1);

/**
 * @generated from service v1.TransportService
 */
export const TransportService: GenService<{
  /**
   * @generated from rpc v1.TransportService.StartTransportJob
   */
  startTransportJob: {
    methodKind: "unary";
    input: typeof CreateTransportJobRequestSchema;
    output: typeof EntityIdResponseSchema;
  },
  /**
   * @generated from rpc v1.TransportService.GetTransportJob
   */
  getTransportJob: {
    methodKind: "unary";
    input: typeof GetTransportJobRequestSchema;
    output: typeof TransportJobSchema;
  },
  /**
   * @generated from rpc v1.TransportService.ListTransportJobs
   */
  listTransportJobs: {
    methodKind: "unary";
    input: typeof ListTransportJobsRequestSchema;
    output: typeof ListTransportJobsResponseSchema;
  },
  /**
   * @generated from rpc v1.TransportService.CancelTransportJob
   */
  cancelTransportJob: {
    methodKind: "unary";
    input: typeof CancelTransportJobRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc v1.TransportService.GetAvailableRoutes
   */
  getAvailableRoutes: {
    methodKind: "unary";
    input: typeof GetAvailableRoutesRequestSchema;
    output: typeof GetAvailableRoutesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_service, 2);

/**
 * @generated from service v1.InventoryService
 */
export const InventoryService: GenService<{
  /**
   * TODO make same function which is not specific to player, but can get every inventory rpc GetInventory(GetInventoryRequest) returns (GetInventoryResponse);
   *
   * @generated from rpc v1.InventoryService.GetInventory
   */
  getInventory: {
    methodKind: "unary";
    input: typeof GetInventoryRequestSchema;
    output: typeof GetInventoryResponseSchema;
  },
  /**
   * @generated from rpc v1.InventoryService.GetEquipment
   */
  getEquipment: {
    methodKind: "unary";
    input: typeof GetEquipmentRequestSchema;
    output: typeof EquipmentSchema;
  },
  /**
   * @generated from rpc v1.InventoryService.EquipItem
   */
  equipItem: {
    methodKind: "unary";
    input: typeof EquipItemRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc v1.InventoryService.UnEquipItem
   */
  unEquipItem: {
    methodKind: "unary";
    input: typeof UnEquipItemRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_service, 3);

/**
 * @generated from service v1.UserService
 */
export const UserService: GenService<{
  /**
   * @generated from rpc v1.UserService.GetUserProgress
   */
  getUserProgress: {
    methodKind: "unary";
    input: typeof GetUserProgressRequestSchema;
    output: typeof GetUserProgressResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_service, 4);

/**
 * @generated from service v1.TutorialService
 */
export const TutorialService: GenService<{
  /**
   * @generated from rpc v1.TutorialService.ChooseStarter
   */
  chooseStarter: {
    methodKind: "unary";
    input: typeof ChooseStarterRequestSchema;
    output: typeof ChooseStarterResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_service, 5);

/**
 * @generated from service v1.MasterdataService
 */
export const MasterdataService: GenService<{
  /**
   * @generated from rpc v1.MasterdataService.GetItems
   */
  getItems: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetItemsResponseSchema;
  },
  /**
   * @generated from rpc v1.MasterdataService.GetMonsters
   */
  getMonsters: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetMonstersResponseSchema;
  },
  /**
   * @generated from rpc v1.MasterdataService.GetProductionJobs
   */
  getProductionJobs: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetProductionJobsResponseSchema;
  },
  /**
   * @generated from rpc v1.MasterdataService.GetBattleJobs
   */
  getBattleJobs: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetBattleJobsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_service, 6);

